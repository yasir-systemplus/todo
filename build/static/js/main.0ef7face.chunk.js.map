{"version":3,"sources":["date/index.jsx","todo-app/components/tag.jsx","todo-app/shared/index.js","todo-app/components/todo.jsx","todo-app/modal/index.jsx","todo-app/components/mocker.jsx","todo-app/components/column.jsx","todo-app/todos.jsx","App.js","reportWebVitals.js","index.js"],"names":["DatePractise","Tag","title","color","onDelete","className","onClick","randomColor","Math","random","toFixed","Todo","todo","tags","id","useState","isDragging","setIsDragging","draggable","onDragStart","ev","dataTransfer","setData","toString","onDragEnd","preventDefault","map","t","Modal","onAddTodo","open","onToggle","tagInput","useRef","setTodo","ReactDOM","createPortal","Root","show","as","Fragment","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","type","name","placeholder","onChange","event","description","target","value","trim","ref","onKeyDown","e","tag","current","key","Date","now","prev","filter","document","getElementById","Mocker","props","style","height","Column","todos","onMove","modal","setModal","onDragOver","onDrop","getData","length","Todos","setTodos","handleOnAddTodo","moveElement","updatedTodos","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.0ef7face.chunk.js","sourcesContent":["function DatePractise() {\r\n  // Right now.\r\n  console.log(Date.now());\r\n  const date = new Date();\r\n\r\n  console.log(date.getDay());\r\n  console.log(date.getUTCMinutes());\r\n}\r\n\r\nexport default DatePractise;\r\n","import React from \"react\";\r\nimport { XIcon } from \"@heroicons/react/outline\";\r\n\r\nexport default function Tag({ title, color, onDelete }) {\r\n  return (\r\n    <div\r\n      className={`mr-2 bg-${color}-300 rounded-md inline-block px-2 py-1/2 `}\r\n    >\r\n      <p className=\"text-sm inline\">{title}</p>\r\n      {typeof onDelete == \"function\" && (\r\n        <XIcon className=\"h-3 w-3 inline\" onClick={onDelete} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","const randomColor = () => {\r\n  const colors = [\r\n    \"grey\",\r\n    \"red\",\r\n    \"yellow\",\r\n    \"green\",\r\n    \"blue\",\r\n    \"indigo\",\r\n    \"purple\",\r\n    \"pink\",\r\n  ];\r\n\r\n  let rand = (Math.random() * (7 - 0) + 0).toFixed(0);\r\n  return colors[rand];\r\n};\r\n\r\nexport default randomColor;\r\n","import React, { useState } from \"react\";\r\nimport Tag from \"./tag\";\r\n\r\nimport randomColor from \"../shared\";\r\n\r\nexport function Todo({ todo: { title, tags, id } }) {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const dragStart = (ev) => {\r\n    ev.dataTransfer.setData(\"id\", id.toString());\r\n\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const dragEnd = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    setIsDragging(false);\r\n    // var data = ev.dataTransfer.getData(\"id\");\r\n    // console.log(\"Drag end: \", data);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      draggable\r\n      onDragStart={dragStart}\r\n      onDragEnd={dragEnd}\r\n      className={`todo mb-3 rounded-md shadow-sm hover:shadow-md bg-white p-3 cursor-move border-t-2 ${\r\n        isDragging && \"opacity-30\"\r\n      }`}\r\n    >\r\n      <p className=\"text-md\">{title}</p>\r\n\r\n      <div className=\"flex-1 mt-3 space-y-1\">\r\n        {tags.map((t) => (\r\n          <Tag color={randomColor()} title={t.title} key={t.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Tag from \"../components/tag\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport randomColor from \"../shared\";\r\n\r\nexport default function Modal({ onAddTodo, open, onToggle }) {\r\n  const tagInput = useRef(null);\r\n  const [todo, setTodo] = useState({ title: \"\", tags: [] });\r\n\r\n  const handleTagsEnter = (e) => {\r\n    const tag = tagInput.current.value;\r\n    if (e.key !== \"Enter\") return;\r\n\r\n    if (!tag) return;\r\n\r\n    setTodo({\r\n      ...todo,\r\n      tags: [...todo.tags, { title: tag.trim(), id: Date.now() }],\r\n    });\r\n\r\n    tagInput.current.value = \"\";\r\n  };\r\n\r\n  const handleDeleteTag = (id) => {\r\n    setTodo((prev) => {\r\n      return { ...prev, tags: prev.tags.filter((t) => t.id !== id) };\r\n    });\r\n  };\r\n\r\n  const handleTodoDescription = (event) => {\r\n    const description = event.target.value;\r\n\r\n    if (!description) return;\r\n\r\n    setTodo({ ...todo, title: description.trim() });\r\n  };\r\n\r\n  const handleAddTodo = () => {\r\n    if (!todo.title) return;\r\n    onAddTodo(todo);\r\n    onToggle(false);\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n        onClose={onToggle}\r\n      >\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"flex flex-col px-6 py-5 bg-gray-50\">\r\n                  <p className=\"mb-2 font-semibold text-gray-700\">Todo</p>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    name=\"\"\r\n                    placeholder=\"Type description\"\r\n                    className=\"p-2 mb-5 bg-white border border-gray-200 rounded shadow-sm h-36\"\r\n                    onChange={handleTodoDescription}\r\n                  />\r\n                  <p className=\"mb-2 font-semibold text-gray-700\">Tags</p>\r\n                  <div className=\"flex flex-row items-center justify-between  bg-white border border-gray-200 rounded shadow-sm\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"w-full p-2\"\r\n                      ref={tagInput}\r\n                      onKeyDown={handleTagsEnter}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-row items-center justify-start mt-3\">\r\n                    {todo.tags.map((t) => (\r\n                      <Tag\r\n                        key={t.id}\r\n                        title={t.title}\r\n                        color={randomColor()}\r\n                        onDelete={() => handleDeleteTag(t.id)}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-green-500 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gree-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={handleAddTodo}\r\n                >\r\n                  Add Todo\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={() => onToggle(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>,\r\n    document.getElementById(\"modal-portal\")\r\n  );\r\n}\r\n","export default function Mocker(props) {\r\n  return (\r\n    <div\r\n      style={{ height: 120 }}\r\n      className={`mb-3 rounded-md border-dashed border p-3  block min-w-full`}\r\n    ></div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Todo } from \"./todo\";\r\nimport Modal from \"../modal\";\r\nimport Mocker from \"./mocker\";\r\n\r\nexport default function Column({ todos, onAddTodo, title, type, onMove }) {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggleModal = (key) => {\r\n    setModal(key);\r\n  };\r\n\r\n  const captureDragOver = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    const id = ev.dataTransfer.getData(\"id\");\r\n\r\n    onMove(id, type);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {modal && (\r\n        <Modal\r\n          onAddTodo={(todo) => onAddTodo({ ...todo, type: type })}\r\n          open={modal}\r\n          onToggle={toggleModal}\r\n        />\r\n      )}\r\n      <div\r\n        className=\"flex-1 bg-gray-100 rounded-sm p-2 dragover\"\r\n        onDragOver={captureDragOver}\r\n        onDrop={handleDrop}\r\n      >\r\n        <header className=\"mb-2\">\r\n          <div className=\"flex flex-row justify-between items-center\">\r\n            <div className=\"font-semibold\">{title}</div>\r\n            <div className=\"bg-gray-300 text-gray-500 rounded-lg px-2\">\r\n              {todos.length}\r\n            </div>\r\n          </div>\r\n          <div\r\n            onClick={() => setModal(true)}\r\n            className=\"bg-gray-300 text-gray-500 rounded-lg px-2 text-center tex-lg my-2 hover:shadow-sm\"\r\n          >\r\n            +\r\n          </div>\r\n        </header>\r\n        <div>\r\n          {todos.map((todo) => (\r\n            <Todo key={todo.id} todo={todo} />\r\n          ))}\r\n\r\n          <Mocker />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Column from \"./components/column\";\r\n\r\nexport default function Todos(props) {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const handleOnAddTodo = (todo) => {\r\n    setTodos([...todos, { ...todo, id: Date.now() }]);\r\n  };\r\n\r\n  const moveElement = (id, type) => {\r\n    const updatedTodos = todos.map((todo) => {\r\n      if (id == todo.id) {\r\n        todo.type = type;\r\n      }\r\n\r\n      return todo;\r\n    });\r\n\r\n    setTodos([...updatedTodos]);\r\n  };\r\n\r\n  console.log(todos);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"bg-gray-200 min-h-screen\">\r\n        <div className=\"container shadow-md relative top-9 rounded-md p-4 bg-gray-50 w-2/3 mx-auto\">\r\n          <h1 className=\"text-xl font-bold\">System Plus Todo App</h1>\r\n\r\n          <div className=\"flex flex-row space-x-2 mt-5\">\r\n            <Column\r\n              title=\"💡 Ideas\"\r\n              todos={todos.filter((t) => t.type === \"ideas\")}\r\n              onAddTodo={handleOnAddTodo}\r\n              type=\"ideas\"\r\n              onMove={moveElement}\r\n            />\r\n            <Column\r\n              title=\"👨‍💻 In Progress\"\r\n              todos={todos.filter((t) => t.type === \"progress\")}\r\n              onAddTodo={handleOnAddTodo}\r\n              type=\"progress\"\r\n              onMove={moveElement}\r\n            />\r\n            <Column\r\n              title=\"🏁 Finished\"\r\n              todos={todos.filter((t) => t.type === \"finished\")}\r\n              onAddTodo={handleOnAddTodo}\r\n              type=\"finished\"\r\n              onMove={moveElement}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import DatePractise from \"./date\";\nimport Set from \"./sets/Set\";\nimport Todos from \"./todo-app/todos\";\n\nfunction App() {\n  return <Todos />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}