{"version":3,"sources":["counter/counter.jsx","date/index.jsx","todo-app/components/tag.jsx","todo-app/components/todo.jsx","todo-app/shared/index.js","todo-app/modal/index.jsx","todo-app/components/mocker.jsx","todo-app/components/column.jsx","todo-app/store/todos.js","todo-app/SPLTodos.jsx","services/contact.js","pagination/pagination.jsx","pagination/tableBody.jsx","pagination/tableHeader.jsx","pagination/contactsTable.jsx","pagination/filterGroup.jsx","pagination/table.jsx","pagination/paginate.js","todo-app/store/middlewares/api.js","todo-app/store/middlewares/localStorage.js","todo-app/store/store.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","increase","setState","prev","count","getSnapshotBeforeUpdate","prevProps","prevState","console","log","state","nextProps","nextState","Fragment","this","className","onClick","Component","DatePractise","Tag","title","color","children","onDelete","Todo","todo","tags","id","useState","showDelete","setShowDelete","isDragging","setIsDragging","onMouseEnter","onMouseLeave","draggable","onDragStart","ev","dataTransfer","setData","toString","onDragEnd","preventDefault","width","height","map","t","_id","randomColor","Math","random","toFixed","Modal","onAddTodo","open","onToggle","schema","Yup","required","label","of","shape","min","ReactDOM","createPortal","Root","show","as","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","initialValues","onSubmit","validationSchema","type","name","placeholder","component","tagsProps","remove","form","values","onKeyPress","key","tag","target","value","push","Date","now","handleTagsEnter","index","document","getElementById","Mocker","style","Column","todos","onMove","modal","setModal","onDragOver","onDrop","getData","length","slice","createSlice","initialState","reducers","addTodo","action","payload","deleteTodo","filter","moveTodo","find","loadAllTodos","getInProgress","createSelector","getFinished","getIdeas","actions","SPLTodos","dispatch","useDispatch","finished","useSelector","inProgress","ideas","useEffect","url","onSuccess","handleOnAddTodo","method","data","moveElement","handleOnDelete","promise","Promise","resolve","setTimeout","getState","a","messaeg","getContacts","contacts","i","jobTitle","faker","jobDescriptor","firstName","lastName","email","avatar","Paginate","itemsCount","pageSize","selected","currentPage","onPageChange","onPrevPage","onNextPage","pageCount","ceil","pages","_","href","p","TableBody","person","src","alt","TableHeader","onSort","sortByItem","order","scope","ContactTable","Filter","descriptors","filterBy","jobD","Table","sort","sortBy","selector","handlePageChange","handlePrevPageChange","handleNextPageChange","cmpFn","b","first","toLowerCase","second","Set","c","allContacts","filteredContacts","sortedAsc","paginated","items","startIndex","take","paginate","reverse","API_BASE","window","location","origin","apiCall","next","onError","axios","request","baseURL","resp","saveLocalStorage","localStorage","setItem","JSON","stringify","localStorageMid","localData","getItem","parse","getLocalStorage","configureStore","reducer","middleware","getDefaultMiddleware","concat","App","exact","to","path","render","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.f267d869.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  /**\r\n   * *Mounting lifecycle methods\r\n   * constructor()\r\n   * static getDerivedStateFromProps()\r\n   * render()\r\n   * componentDidMount()\r\n   */\r\n\r\n  /**\r\n   * *Updating lifecycle methods\r\n   * static getDerivedStateFromProps()\r\n   * shouldComponentUpdate()\r\n   * render()\r\n   * getSnapshotBeforeUpdate()\r\n   * componentDidUpdate()\r\n   */\r\n\r\n  /**\r\n   * *Unmounting lifecycle method\r\n   * componentWillUnmount()\r\n   */\r\n\r\n  /**\r\n   * *Error handling lifecycle methods\r\n   * static getDerivedStateFromError()\r\n   * componentDidCatch()\r\n   */\r\n\r\n  // Reference: https://blog.logrocket.com/react-lifecycle-methods-tutorial-examples/#shouldcomponentupdate\r\n\r\n  /**\r\n   * * Mounting\r\n   * constructor() - 1\r\n   * static getDerivedStateFromProps() - 2\r\n   * render() - 3\r\n   * componentDidMount() - 4\r\n   */\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { count: 0 };\r\n\r\n    console.log(\"contructor: \", this.state.count);\r\n  }\r\n\r\n  /**\r\n   * * First function after constructor\r\n   * If you want to map props to state\r\n   * You may return null for not updating the state\r\n   * ! On Update phase, this will remape from props to state\r\n   * * Update Phase: - 1\r\n   */\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"getDrivedStateFromProps: Updating state\");\r\n    return null;\r\n  }\r\n\r\n  increase = () => {\r\n    this.setState((prev) => ({\r\n      count: prev.count + 1,\r\n    }));\r\n  };\r\n\r\n  /**\r\n   * * Update Phase - 2\r\n   * Mostly used for optimization to prevent unnecssary renders\r\n   * compare current state/props with new one. If require update then return true.\r\n   * Otherwise rereturn false\r\n   */\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log(\"shouldComponentUpdate\");\r\n    // return this.state.count % 2 === 0;\r\n\r\n    return true;\r\n  }\r\n\r\n  // Prepare your DOM and set here for render\r\n  render() {\r\n    console.log(\"Rendering: Component is mounting to DOM\");\r\n    return (\r\n      <React.Fragment>\r\n        <p>Use console to see the messages. </p>\r\n        <div>{this.state.count}</div>\r\n        <button className=\"border-2\" onClick={this.increase}>\r\n          Increase\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getSnapshotBeforeUpdate = (prevProps, prevState) => {\r\n    console.log(\"getSnapshotBeforeUpdate\");\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Executes after component is rendered to DOM.\r\n   * Call APIs, set timers etc\r\n   * Subscriptions\r\n   * Only called in mounting phase\r\n   */\r\n  componentDidMount() {\r\n    console.log(\"Component did mount: \", this.state.count);\r\n  }\r\n\r\n  // Executes each time after rendering to DOM.\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"componentDidUpdate\");\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","function DatePractise() {\r\n  // Right now.\r\n  console.log(Date.now());\r\n  const date = new Date();\r\n\r\n  console.log(date.getDay());\r\n  console.log(date.getUTCMinutes());\r\n}\r\n\r\nexport default DatePractise;\r\n","import React from \"react\";\r\nimport { XIcon } from \"@heroicons/react/outline\";\r\n\r\nexport default function Tag({ title, color, children, onDelete }) {\r\n  return (\r\n    <div\r\n      className={`mr-2 bg-${color}-300 rounded-md inline-block px-2 py-1/2 `}\r\n    >\r\n      <p className=\"text-sm inline\">{title}</p>\r\n      {typeof onDelete == \"function\" && (\r\n        <XIcon className=\"h-3 w-3 inline\" onClick={onDelete} />\r\n      )}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Tag from \"./tag\";\r\nimport { XCircleIcon } from \"@heroicons/react/outline\";\r\n\r\nexport default function Todo({ todo: { title, tags, id }, onDelete }) {\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const dragStart = (ev) => {\r\n    ev.dataTransfer.setData(\"id\", id.toString());\r\n\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const dragEnd = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    setShowDelete(true);\r\n  };\r\n  const handleMouseLeave = () => {\r\n    setShowDelete(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      draggable\r\n      onDragStart={dragStart}\r\n      onDragEnd={dragEnd}\r\n      className={`todo mb-3 relative rounded-md shadow-sm hover:shadow-md bg-white p-3 cursor-move border-t-2 ${\r\n        isDragging && \"opacity-30\"\r\n      }`}\r\n    >\r\n      {showDelete && (\r\n        <XCircleIcon\r\n          width=\"25\"\r\n          color=\"red\"\r\n          height=\"25\"\r\n          className=\"absolute right-3 top-2 cursor-pointer\"\r\n          onClick={onDelete}\r\n        />\r\n      )}\r\n      <p className=\"text-md\">{title}</p>\r\n\r\n      <div className=\"flex-1 mt-3 space-y-1\">\r\n        {tags.map((t) => (\r\n          <Tag color={t.color} title={t.title} key={t._id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const randomColor = () => {\r\n  const colors = [\r\n    \"grey\",\r\n    \"red\",\r\n    \"yellow\",\r\n    \"green\",\r\n    \"blue\",\r\n    \"indigo\",\r\n    \"purple\",\r\n    \"pink\",\r\n  ];\r\n\r\n  let rand = (Math.random() * (7 - 0) + 0).toFixed(0);\r\n  return colors[rand];\r\n};\r\n\r\nexport default randomColor;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Tag from \"../components/tag\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport randomColor from \"../shared\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { Form, Field, Formik, FieldArray, ErrorMessage } from \"formik\";\r\n\r\nexport default function Modal({ onAddTodo, open, onToggle }) {\r\n  const formData = { title: \"\", tags: [] };\r\n\r\n  const schema = Yup.object({\r\n    title: Yup.string()\r\n      .required(\"Description is required.\")\r\n      .label(\"Description\"),\r\n    tags: Yup.array()\r\n      .of(\r\n        Yup.object().shape({\r\n          title: Yup.string().required(\"Tag is required.\").label(\"Title\"),\r\n        })\r\n      )\r\n      .min(1, \"Minimum one tag is required.\")\r\n      .label(\"Title\"),\r\n  });\r\n\r\n  const handleTagsEnter = (tagsProps, ev) => {\r\n    if (ev.key === \"Enter\") {\r\n      ev.preventDefault();\r\n      const tag = ev.target.value;\r\n\r\n      if (!tag) return;\r\n      tagsProps.push({ id: Date.now(), title: tag, color: randomColor() });\r\n      ev.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleAddTodo = (todo, ev) => {\r\n    onAddTodo(todo);\r\n    onToggle(false);\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n        onClose={onToggle}\r\n      >\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <Formik\r\n                initialValues={formData}\r\n                onSubmit={handleAddTodo}\r\n                validationSchema={schema}\r\n              >\r\n                <Form>\r\n                  <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                    <div className=\"flex flex-col px-6 py-5 bg-gray-50\">\r\n                      <p className=\"mb-2 font-semibold text-gray-700\">Todo</p>\r\n                      <div className=\"mb-2\">\r\n                        <Field\r\n                          as=\"textarea\"\r\n                          type=\"text\"\r\n                          name=\"title\"\r\n                          placeholder=\"Type description\"\r\n                          className=\"p-2 bg-white min-w-full border border-gray-200 rounded shadow-sm h-36\"\r\n                        />\r\n                        <ErrorMessage\r\n                          component=\"div\"\r\n                          className=\" text-red-600\"\r\n                          name=\"title\"\r\n                        />\r\n                      </div>\r\n\r\n                      <FieldArray name=\"tags\">\r\n                        {(tagsProps) => {\r\n                          const {\r\n                            remove,\r\n                            form: {\r\n                              values: { tags },\r\n                            },\r\n                          } = tagsProps;\r\n\r\n                          return (\r\n                            <React.Fragment>\r\n                              <p className=\"mb-2 font-semibold text-gray-700\">\r\n                                Tags\r\n                              </p>\r\n                              <div className=\"flex flex-row items-center justify-between  bg-white border border-gray-200 rounded shadow-sm\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"w-full p-2\"\r\n                                  onKeyPress={(ev) =>\r\n                                    handleTagsEnter(tagsProps, ev)\r\n                                  }\r\n                                />\r\n                              </div>\r\n                              <ErrorMessage\r\n                                component=\"div\"\r\n                                name=\"tags\"\r\n                                className=\"text-red-500\"\r\n                              />\r\n\r\n                              <div className=\"flex flex-row items-center justify-start flex-wrap space-y-2 mt-3\">\r\n                                {tags.map((t, index) => (\r\n                                  <Tag\r\n                                    key={index}\r\n                                    title={t.title}\r\n                                    color={t.color}\r\n                                    onDelete={() => remove(index)}\r\n                                  >\r\n                                    <ErrorMessage\r\n                                      name={`tags.${index}.title`}\r\n                                    />\r\n                                  </Tag>\r\n                                ))}\r\n                              </div>\r\n                            </React.Fragment>\r\n                          );\r\n                        }}\r\n                      </FieldArray>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-green-500 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gree-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                    >\r\n                      Add Todo\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                      onClick={() => onToggle(false)}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              </Formik>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>,\r\n    document.getElementById(\"modal-portal\")\r\n  );\r\n}\r\n","export default function Mocker(props) {\r\n  return (\r\n    <div\r\n      style={{ height: 120 }}\r\n      className={`mb-3 rounded-md border-dashed border flex justify-center items-center p-3 border-8 block min-w-full`}\r\n    >\r\n      <p className=\"text-gray-300\">Drop Here</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"./todo\";\r\nimport Modal from \"../modal\";\r\nimport Mocker from \"./mocker\";\r\n\r\nexport default function Column({\r\n  todos,\r\n  title,\r\n  type,\r\n  onMove,\r\n  onAddTodo,\r\n  onDelete,\r\n}) {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggleModal = (key) => {\r\n    setModal(key);\r\n  };\r\n\r\n  const captureDragOver = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (ev) => {\r\n    ev.preventDefault();\r\n    const id = ev.dataTransfer.getData(\"id\");\r\n    onMove(id, type);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {modal && (\r\n        <Modal\r\n          onAddTodo={(todo) => onAddTodo({ ...todo, type: type })}\r\n          open={modal}\r\n          onToggle={toggleModal}\r\n        />\r\n      )}\r\n      <div\r\n        className=\"flex-1 bg-gray-100 rounded-sm p-2 dragover\"\r\n        onDragOver={captureDragOver}\r\n        onDrop={handleDrop}\r\n      >\r\n        <header className=\"mb-2\">\r\n          <div className=\"flex flex-row justify-between items-center\">\r\n            <div className=\"font-semibold\">{title}</div>\r\n            <p className=\"bg-gray-300 text-gray-500 text-sm rounded-lg px-2 py-1/2\">\r\n              {todos.length}\r\n            </p>\r\n          </div>\r\n          <div\r\n            onClick={() => setModal(true)}\r\n            className=\"bg-gray-300 text-gray-500 rounded-lg px-2 text-center tex-lg my-2 hover:shadow-sm\"\r\n          >\r\n            +\r\n          </div>\r\n        </header>\r\n        <div>\r\n          {todos.map((todo) => (\r\n            <Todo key={todo.id} todo={todo} onDelete={() => onDelete(todo)} />\r\n          ))}\r\n\r\n          <Mocker />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","/* eslint-disable eqeqeq */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nconst slice = createSlice({\r\n  name: \"todos\",\r\n  initialState: [],\r\n  reducers: {\r\n    addTodo: (todos, action) => {\r\n      todos.push(action.payload);\r\n    },\r\n    deleteTodo: (todos, action) => {\r\n      return todos.filter((todo) => todo.id != action.payload.id);\r\n    },\r\n    moveTodo: (todos, action) => {\r\n      const todo = todos.find((t) => t.id == action.payload._id);\r\n      todo.type = action.payload.type;\r\n    },\r\n    loadAllTodos: (todos, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const loadTodos = ({ dispatch, getState }) => {\r\n  dispatch({\r\n    type: \"apiCall\",\r\n    payload: {\r\n      url: \"/todos\",\r\n      onSuccess: loadAllTodos.type,\r\n    },\r\n  });\r\n};\r\n\r\n//Memoized Selectors\r\nexport const getInProgress = createSelector(\r\n  (state) => state,\r\n  (todos) => todos.filter((t) => t.type === \"progress\")\r\n);\r\n\r\nexport const getFinished = createSelector(\r\n  (state) => state,\r\n  (todos) => todos.filter((t) => t.type === \"finished\")\r\n);\r\n\r\nexport const getIdeas = createSelector(\r\n  (state) => state,\r\n  (todos) => todos.filter((t) => t.type === \"ideas\")\r\n);\r\n\r\nexport const getAll = createSelector(\r\n  (state) => state,\r\n  (todos) => todos\r\n);\r\n\r\nexport const { addTodo, deleteTodo, moveTodo, loadAllTodos } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n","// import useLocalStorage from \"./hooks/useLocalStorage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Column from \"./components/column\";\r\nimport {\r\n  addTodo,\r\n  moveTodo,\r\n  deleteTodo,\r\n  getFinished,\r\n  getInProgress,\r\n  getIdeas,\r\n  loadAllTodos,\r\n} from \"./store/todos\";\r\n\r\nexport default function SPLTodos() {\r\n  const dispatch = useDispatch();\r\n  const finished = useSelector(getFinished);\r\n  const inProgress = useSelector(getInProgress);\r\n  const ideas = useSelector(getIdeas);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"apiCall\",\r\n      payload: {\r\n        url: \"/todos\",\r\n        onSuccess: loadAllTodos.type,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const handleOnAddTodo = (todo) => {\r\n    //dispatch(addTodo({ ...todo, id: Date.now() }));\r\n\r\n    dispatch({\r\n      type: \"apiCall\",\r\n      payload: {\r\n        url: \"/todos\",\r\n        method: \"post\",\r\n        data: todo,\r\n        onSuccess: addTodo.type,\r\n      },\r\n    });\r\n  };\r\n\r\n  const moveElement = (id, type) => {\r\n    // dispatch(moveTodo({ id, type }));\r\n\r\n    dispatch({\r\n      type: \"apiCall\",\r\n      payload: {\r\n        url: \"/todos/movetodo\",\r\n        method: \"patch\",\r\n        data: { id, type },\r\n        onSuccess: moveTodo.type,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleOnDelete = (todo) => {\r\n    //dispatch(deleteTodo({ id: todo.id }));\r\n\r\n    dispatch({\r\n      type: \"apiCall\",\r\n      payload: {\r\n        url: \"/todos/\" + todo.id,\r\n        method: \"delete\",\r\n        onSuccess: deleteTodo.type,\r\n      },\r\n    });\r\n  };\r\n\r\n  const promise = new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(\"acha yr\");\r\n    }, 2000);\r\n  });\r\n\r\n  //Async Thunk\r\n  dispatch(async (dispatch, getState) => {\r\n    const messaeg = await promise;\r\n    console.log(messaeg);\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"bg-gray-200 min-h-screen \">\r\n        <div className=\"container shadow-md relative top-9 rounded-md p-4 bg-gray-50 w-2/3 mx-auto\">\r\n          <h1 className=\"text-xl font-bold\">System Plus Todo App</h1>\r\n\r\n          <div className=\"flex flex-row space-x-2 mt-5\">\r\n            <Column\r\n              title=\"💡 Ideas\"\r\n              todos={ideas}\r\n              onAddTodo={handleOnAddTodo}\r\n              type=\"ideas\"\r\n              onMove={moveElement}\r\n              onDelete={handleOnDelete}\r\n            />\r\n\r\n            <Column\r\n              title=\"👨‍💻 In Progress\"\r\n              todos={inProgress}\r\n              onAddTodo={handleOnAddTodo}\r\n              type=\"progress\"\r\n              onMove={moveElement}\r\n              onDelete={handleOnDelete}\r\n            />\r\n\r\n            <Column\r\n              title=\"🏁 Finished\"\r\n              todos={finished}\r\n              onAddTodo={handleOnAddTodo}\r\n              type=\"finished\"\r\n              onMove={moveElement}\r\n              onDelete={handleOnDelete}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as faker from \"faker\";\r\n\r\nexport const getContacts = () => {\r\n  let contacts = [];\r\n  for (let i = 0; i < 37; i++) {\r\n    contacts.push({\r\n      jobTitle: faker.name.jobTitle(),\r\n      jobDescriptor: faker.name.jobDescriptor(),\r\n      title: faker.name.title(),\r\n      firstName: faker.name.firstName(),\r\n      lastName: faker.name.lastName(),\r\n      email: faker.internet.email(),\r\n      avatar: faker.internet.avatar(),\r\n    });\r\n  }\r\n  return contacts;\r\n};\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable eqeqeq */\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/solid\";\r\n\r\nimport * as _ from \"lodash\";\r\n\r\nconst Paginate = ({\r\n  count: itemsCount,\r\n  pageSize,\r\n  selected,\r\n  currentPage,\r\n  onPageChange,\r\n  onPrevPage,\r\n  onNextPage,\r\n}) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  //return if we have only one page. No pagination for single page.\r\n  if (pageCount == 1) return null;\r\n\r\n  const pages = _.range(1, pageCount + 1);\r\n  return (\r\n    <div className=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\r\n      <div className=\"flex-1 flex justify-between sm:hidden\">\r\n        <a\r\n          href=\"#\"\r\n          className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n        >\r\n          Previous\r\n        </a>\r\n        <a\r\n          href=\"#\"\r\n          className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n        >\r\n          Next\r\n        </a>\r\n      </div>\r\n      <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n        <div>\r\n          <p className=\"text-sm text-gray-700\">\r\n            Showing{\" \"}\r\n            <span className=\"font-medium\">\r\n              {(currentPage - 1) * pageSize + 1}\r\n            </span>{\" \"}\r\n            to{\" \"}\r\n            <span className=\"font-medium\">\r\n              {(currentPage - 1) * pageSize + selected}\r\n            </span>{\" \"}\r\n            of <span className=\"font-medium\">{itemsCount}</span> results\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <nav\r\n            className={`relative z-0 inline-flex rounded-md shadow-sm -space-x-px ${\r\n              currentPage == 1 ? \"bg-grey\" : \"\"\r\n            }`}\r\n            aria-label=\"Pagination\"\r\n          >\r\n            {\r\n              <a\r\n                onClick={() => (currentPage == 1 ? null : onPrevPage())}\r\n                className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n              >\r\n                <span className=\"sr-only\">Previous</span>\r\n                <ChevronLeftIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n              </a>\r\n            }\r\n\r\n            {pages.map((p) => (\r\n              <a\r\n                key={p}\r\n                className={\r\n                  p == currentPage\r\n                    ? \"z-10 bg-indigo-50 border-indigo-500 text-indigo-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium\"\r\n                    : \"bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium\"\r\n                }\r\n                onClick={() => onPageChange(p)}\r\n              >\r\n                {p}\r\n              </a>\r\n            ))}\r\n\r\n            {currentPage < pageCount && (\r\n              <a\r\n                onClick={onNextPage}\r\n                className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n              >\r\n                <span className=\"sr-only\">Next</span>\r\n                <ChevronRightIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n              </a>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","const TableBody = ({ contacts }) => {\r\n  return (\r\n    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n      {contacts.map((person) => (\r\n        <tr key={person.email}>\r\n          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex-shrink-0 h-10 w-10\">\r\n                <img\r\n                  className=\"h-10 w-10 rounded-full\"\r\n                  src={person.avatar}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <div className=\"text-sm font-medium text-gray-900\">\r\n                  {person.firstName + \" \" + person.lastName}\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">{person.email}</div>\r\n              </div>\r\n            </div>\r\n          </td>\r\n          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n            <div className=\"text-sm text-gray-900\">{person.title}</div>\r\n            <div className=\"text-sm text-gray-500\">{person.jobDescriptor}</div>\r\n          </td>\r\n          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n            <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\r\n              Active\r\n            </span>\r\n          </td>\r\n          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n            {person.jobTitle}\r\n          </td>\r\n          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n            <a href=\"#\" className=\"text-indigo-600 hover:text-indigo-900\">\r\n              Edit\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default TableBody;\r\n","import { ChevronUpIcon, ChevronDownIcon } from \"@heroicons/react/solid\";\r\n\r\nconst TableHeader = ({ onSort, sortByItem, order }) => {\r\n  return (\r\n    <thead className=\"bg-gray-50\">\r\n      <tr className=\"flex flex-row\">\r\n        <th\r\n          onClick={() => onSort(\"firstName\")}\r\n          scope=\"col\"\r\n          className=\"flex flex-row justify-between items-center px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n        >\r\n          Name\r\n          <div className=\"child\">\r\n            <ChevronUpIcon\r\n              width=\"20\"\r\n              height=\"20\"\r\n              color={\r\n                sortByItem === \"firstName\" && order === \"asc\" ? \"black\" : \"\"\r\n              }\r\n            />\r\n            <ChevronDownIcon\r\n              width=\"20\"\r\n              height=\"20\"\r\n              color={\r\n                sortByItem === \"firstName\" && order === \"desc\" ? \"black\" : \"\"\r\n              }\r\n            />\r\n          </div>\r\n        </th>\r\n        <th\r\n          onClick={() => onSort(\"title\")}\r\n          scope=\"col\"\r\n          className=\"flex flex-row justify-between items-center px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n        >\r\n          Title\r\n          <div className=\"child\">\r\n            <ChevronUpIcon\r\n              width=\"20\"\r\n              height=\"20\"\r\n              color={sortByItem === \"title\" && order === \"asc\" ? \"black\" : \"\"}\r\n            />\r\n            <ChevronDownIcon\r\n              width=\"20\"\r\n              height=\"20\"\r\n              color={sortByItem === \"title\" && order === \"desc\" ? \"black\" : \"\"}\r\n            />\r\n          </div>\r\n        </th>\r\n        <th\r\n          onClick={() => onSort(\"status\")}\r\n          scope=\"col\"\r\n          className=\"flex flex-row justify-between items-center px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n        >\r\n          Status\r\n          <div className=\"child\">\r\n            <ChevronUpIcon\r\n              width=\"20\"\r\n              height=\"20\"\r\n              color={sortByItem === \"status\" && order === \"asc\" ? \"black\" : \"\"}\r\n            />\r\n            <ChevronDownIcon\r\n              width=\"20\"\r\n              height=\"20\"\r\n              color={sortByItem === \"status\" && order === \"desc\" ? \"black\" : \"\"}\r\n            />\r\n          </div>\r\n        </th>\r\n        <th\r\n          onClick={() => onSort(\"jobTitle\")}\r\n          scope=\"col\"\r\n          className=\"flex flex-row justify-between items-center px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n        >\r\n          Role\r\n          <div className=\"child\">\r\n            <ChevronUpIcon\r\n              width=\"20\"\r\n              height=\"20\"\r\n              color={\r\n                sortByItem === \"jobTitle\" && order === \"asc\" ? \"black\" : \"\"\r\n              }\r\n            />\r\n            <ChevronDownIcon\r\n              width=\"20\"\r\n              height=\"20\"\r\n              color={\r\n                sortByItem === \"jobTitle\" && order === \"desc\" ? \"black\" : \"\"\r\n              }\r\n            />\r\n          </div>\r\n        </th>\r\n        <th scope=\"col\" className=\"relative px-6 py-3\">\r\n          <span className=\"sr-only\">Edit</span>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport TableBody from \"./tableBody\";\r\nimport TableHeader from \"./tableHeader\";\r\n\r\nconst ContactTable = ({ contacts, onSort, sortByItem, order }) => {\r\n  return (\r\n    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 \">\r\n      <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <TableHeader onSort={onSort} sortByItem={sortByItem} order={order} />\r\n          <TableBody contacts={contacts} />\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactTable;\r\n","const Filter = ({ descriptors, selected, filterBy }) => {\r\n  return (\r\n    <ul className=\"rounded-md border-2\">\r\n      <li\r\n        onClick={() => filterBy(\"all\")}\r\n        className={`px-2 py-3 border-solid border-b-2 rounded-md ${\r\n          selected === \"all\" ? \"bg-red-500 text-white\" : \"\"\r\n        }`}\r\n      >\r\n        All\r\n      </li>\r\n      {descriptors.map((jobD) => (\r\n        <li\r\n          key={jobD}\r\n          onClick={() => filterBy(jobD)}\r\n          className={`px-2 py-3 border-solid border-b-2 rounded-md ${\r\n            selected === jobD ? \"bg-red-500 text-white\" : \"\"\r\n          }`}\r\n        >\r\n          {jobD}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { getContacts } from \"../services/contact\";\r\nimport Paginate from \"./pagination\";\r\nimport { paginate } from \"./paginate\";\r\nimport ContactTable from \"./contactsTable\";\r\nimport Filter from \"./filterGroup\";\r\nimport _ from \"lodash\";\r\n\r\nclass Table extends Component {\r\n  state = {\r\n    contacts: [...getContacts()],\r\n    currentPage: 1,\r\n    pageSize: 8,\r\n    filterBy: \"all\",\r\n    sort: { sortBy: \"name\", order: \"asc\" },\r\n  };\r\n\r\n  onSort = (selector) => {\r\n    this.setState({\r\n      ...this.state,\r\n      sort: {\r\n        sortBy: selector,\r\n        order: this.state.sort.order === \"asc\" ? \"desc\" : \"asc\",\r\n      },\r\n    });\r\n  };\r\n\r\n  handlePageChange = (p) => {\r\n    this.setState({ ...this.state, currentPage: p });\r\n  };\r\n\r\n  handlePrevPageChange = () => {\r\n    this.setState({ ...this.state, currentPage: this.state.currentPage - 1 });\r\n  };\r\n\r\n  handleNextPageChange = () => {\r\n    this.setState({ ...this.state, currentPage: this.state.currentPage + 1 });\r\n  };\r\n\r\n  filterBy = (selector) => {\r\n    this.setState({ ...this.state, filterBy: selector });\r\n  };\r\n\r\n  cmpFn = (a, b) => {\r\n    const first = a.firstName.toLowerCase();\r\n    const second = b.firstName.toLowerCase();\r\n    console.log(first, second);\r\n\r\n    if (first < second) {\r\n      return -1;\r\n    }\r\n\r\n    if (first > second) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  render() {\r\n    const jobDescriptor = [\r\n      ...new Set([...this.state.contacts.map((c) => c.jobDescriptor)]),\r\n    ].sort();\r\n\r\n    const { contacts: allContacts, currentPage, pageSize } = this.state;\r\n\r\n    const filteredContacts = allContacts.filter((c) => {\r\n      if (this.state.filterBy === \"all\") {\r\n        return true;\r\n      } else {\r\n        return c.jobDescriptor === this.state.filterBy;\r\n      }\r\n    });\r\n\r\n    const sortedAsc = _.sortBy(filteredContacts, [this.state.sort.sortBy]);\r\n\r\n    const sorted =\r\n      this.state.sort.order !== \"asc\" ? sortedAsc : sortedAsc.reverse();\r\n\r\n    const paginated = paginate(sorted, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"bg-gray-100 flex flex-row pl-4 py-2\">\r\n        <div className=\"flex flex-col w-2/12 mt-2\">\r\n          <Filter\r\n            descriptors={jobDescriptor}\r\n            selected={this.state.filterBy}\r\n            filterBy={this.filterBy}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex flex-col w-10/12\">\r\n          <ContactTable\r\n            contacts={paginated}\r\n            onSort={this.onSort}\r\n            sortByItem={this.state.sort.sortBy}\r\n            order={this.state.sort.order}\r\n          />\r\n\r\n          <Paginate\r\n            count={filteredContacts.length}\r\n            pageSize={this.state.pageSize}\r\n            currentPage={this.state.currentPage}\r\n            selected={paginated.length}\r\n            onPageChange={this.handlePageChange}\r\n            onPrevPage={this.handlePrevPageChange}\r\n            onNextPage={this.handleNextPageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, currentPage, pageSize) {\r\n  const startIndex = (currentPage - 1) * pageSize;\r\n\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst API_BASE = window.location.origin + \"/v1\";\r\n\r\nconst apiCall =\r\n  ({ dispatch }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    if (action.type !== \"apiCall\") return next(action);\r\n\r\n    // next(action);\r\n\r\n    const { onSuccess, onError, method, data, url } = action.payload;\r\n\r\n    try {\r\n      const resp = await axios.request({\r\n        baseURL: API_BASE,\r\n        method,\r\n        data,\r\n        url,\r\n      });\r\n\r\n      dispatch({\r\n        type: onSuccess,\r\n        payload: resp.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: onError, payload: error });\r\n    }\r\n  };\r\n\r\nexport default apiCall;\r\n","/* eslint-disable eqeqeq */\r\nimport { addTodo, deleteTodo, loadAllTodos, moveTodo } from \"../todos\";\r\n\r\nconst localStorageMid =\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  (action) => {\r\n    if (action.type === addTodo.type) {\r\n      const updatedTodos = [...getState(), action.payload];\r\n\r\n      saveLocalStorage(updatedTodos);\r\n    }\r\n\r\n    if (action.type === deleteTodo.type) {\r\n      const localState = getState();\r\n\r\n      const afterDeletion = localState.filter(\r\n        (todo) => todo.id != action.payload.id\r\n      );\r\n\r\n      saveLocalStorage(afterDeletion);\r\n    }\r\n\r\n    if (action.type === moveTodo.type) {\r\n      const localState = getLocalStorage();\r\n      const updated = localState.map((todo) => {\r\n        if (todo.id == action.payload.id) {\r\n          todo.type = action.payload.type;\r\n        }\r\n\r\n        return todo;\r\n      });\r\n\r\n      saveLocalStorage(updated);\r\n    }\r\n\r\n    // if (action.type === loadAllTodos.type) {\r\n    //   action.payload = getLocalStorage();\r\n    // }\r\n\r\n    next(action);\r\n  };\r\n\r\nfunction getLocalStorage() {\r\n  const localData = localStorage.getItem(\"todos\");\r\n\r\n  if (!localData) return [];\r\n\r\n  return JSON.parse(localData);\r\n}\r\n\r\nfunction saveLocalStorage(data) {\r\n  localStorage.setItem(\"todos\", JSON.stringify(data));\r\n}\r\n\r\nexport default localStorageMid;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport reducer from \"./todos\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport apiCall from \"./middlewares/api\";\r\nimport localStorageMid from \"./middlewares/localStorage\";\r\n\r\nexport default configureStore({\r\n  reducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat([apiCall].concat(localStorageMid)),\r\n});\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport Counter from \"./counter/counter\";\nimport DatePractise from \"./date\";\nimport Set from \"./sets/Set\";\nimport SPLTodos from \"./todo-app/SPLTodos\";\nimport Table from \"./pagination/table\";\nimport React from \"react\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./todo-app/store/store\";\n/**\n ** App js is used to configure different projects.\n * TODO: Todos project\n * TODO: Counter project(Life Cycle Hooks)\n * TODO: Working on Data (Pagination, sorting, filtering)\n */\n\nfunction App() {\n  return (\n    <>\n      <div className=\"flex flex-row justify-center space-x-10\">\n        <NavLink exact to=\"/\">\n          Todos\n        </NavLink>\n        <NavLink to=\"/table\">Table</NavLink>\n        <NavLink to=\"/hooks\">Hooks</NavLink>\n      </div>\n\n      <Switch>\n        <Route path=\"/table\" component={Table} />\n        <Route path=\"/hooks\" component={Counter} />\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <Provider store={store}>\n              <SPLTodos {...props} />\n            </Provider>\n          )}\n        />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}