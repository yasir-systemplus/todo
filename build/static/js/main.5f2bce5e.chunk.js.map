{"version":3,"sources":["counter/counter.jsx","date/index.jsx","todo-app/components/tag.jsx","todo-app/shared/index.js","todo-app/components/todo.jsx","todo-app/modal/index.jsx","todo-app/components/mocker.jsx","todo-app/components/column.jsx","todo-app/SPLTodos.jsx","services/contact.js","pagination/pagination.jsx","pagination/table.jsx","pagination/paginate.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","increase","setState","prev","count","getSnapshotBeforeUpdate","prevProps","prevState","console","log","state","nextProps","nextState","Fragment","this","className","onClick","Component","DatePractise","Tag","title","color","onDelete","randomColor","Math","random","toFixed","Todo","todo","tags","id","useState","isDragging","setIsDragging","draggable","onDragStart","ev","dataTransfer","setData","toString","onDragEnd","preventDefault","map","t","Modal","onAddTodo","open","onToggle","tagInput","useRef","setTodo","ReactDOM","createPortal","Root","show","as","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","type","name","placeholder","onChange","event","description","target","value","trim","ref","onKeyDown","e","tag","current","key","Date","now","filter","document","getElementById","Mocker","style","height","Column","todos","length","onMove","modal","setModal","onDragOver","onDrop","getData","SPLTodos","setTodos","handleOnAddTodo","moveElement","updatedTodos","getContacts","contacts","i","push","faker","email","avatar","Paginate","itemsCount","pageSize","selected","currentPage","onPageChange","onPrevPage","onNextPage","pageCount","ceil","pages","_","href","p","Table","handlePageChange","handlePrevPageChange","handleNextPageChange","allContacts","paginated","items","startIndex","slice","take","paginate","scope","person","src","alt","firstName","lastName","jobDescriptor","jobTitle","App","selector","setSelector","buttonStyles","selectedComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"2MAmHeA,E,kDA1Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmBRC,SAAW,WACT,EAAKC,UAAS,SAACC,GAAD,MAAW,CACvBC,MAAOD,EAAKC,MAAQ,OAtBL,EAqDnBC,wBAA0B,SAACC,EAAWC,GAEpC,OADAC,QAAQC,IAAI,2BACL,MArDP,EAAKC,MAAQ,CAAEN,MAAO,GAEtBI,QAAQC,IAAI,eAAgB,EAAKC,MAAMN,OAJtB,E,yDAgCnB,SAAsBO,EAAWC,GAI/B,OAHAJ,QAAQC,IAAI,0BAGL,I,oBAIT,WAEE,OADAD,QAAQC,IAAI,2CAEV,eAAC,IAAMI,SAAP,WACE,kEACA,8BAAMC,KAAKJ,MAAMN,QACjB,wBAAQW,UAAU,WAAWC,QAASF,KAAKb,SAA3C,2B,+BAkBN,WACEO,QAAQC,IAAI,wBAAyBK,KAAKJ,MAAMN,S,gCAIlD,SAAmBE,EAAWC,GAC5BC,QAAQC,IAAI,yB,uCAvDd,SAAgCT,EAAOU,GAErC,OADAF,QAAQC,IAAI,2CACL,S,GAxDWQ,aCOPC,I,uBCNA,SAASC,EAAT,GAA0C,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC1C,OACE,sBACEP,UAAS,kBAAaM,EAAb,6CADX,UAGE,mBAAGN,UAAU,iBAAb,SAA+BK,IACX,mBAAZE,GACN,cAAC,IAAD,CAAOP,UAAU,iBAAiBC,QAASM,OCVnD,IAgBeC,EAhBK,WAalB,MAZe,CACb,OACA,MACA,SACA,QACA,OACA,SACA,SACA,SAGU,EAAAC,KAAKC,SAAqB,GAAGC,QAAQ,KCP5C,SAASC,EAAT,GAA8C,IAAD,IAA7BC,KAAQR,EAAqB,EAArBA,MAAOS,EAAc,EAAdA,KAAMC,EAAQ,EAARA,GAC1C,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBACEC,WAAS,EACTC,YAfc,SAACC,GACjBA,EAAGC,aAAaC,QAAQ,KAAMR,EAAGS,YAEjCN,GAAc,IAaZO,UAVY,SAACJ,GACfA,EAAGK,iBAEHR,GAAc,IAQZlB,UAAS,6FACPiB,GAAc,cALlB,UAQE,mBAAGjB,UAAU,UAAb,SAAwBK,IAExB,qBAAKL,UAAU,wBAAf,SACGc,EAAKa,KAAI,SAACC,GAAD,OACR,cAACxB,EAAD,CAAKE,MAAOE,IAAeH,MAAOuB,EAAEvB,OAAYuB,EAAEb,Y,wBC3B7C,SAASc,EAAT,GAA+C,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACzCC,EAAWC,iBAAO,MACxB,EAAwBlB,mBAAS,CAAEX,MAAO,GAAIS,KAAM,KAApD,mBAAOD,EAAP,KAAasB,EAAb,KAoCA,OAAOC,IAASC,aACd,cAAC,IAAWC,KAAZ,CAAiBC,KAAMR,EAAMS,GAAI1C,WAAjC,SACE,cAAC,IAAD,CACE0C,GAAG,MACHxC,UAAU,qCACVyC,QAAST,EAHX,SAKE,sBAAKhC,UAAU,yFAAf,UACE,cAAC,IAAW0C,MAAZ,CACEF,GAAI1C,WACJ6C,MAAM,wBACNC,UAAU,YACVC,QAAQ,cACRC,MAAM,uBACNC,UAAU,cACVC,QAAQ,YAPV,SASE,cAAC,IAAOC,QAAR,CAAgBjD,UAAU,iEAG5B,sBACEA,UAAU,qDACV,cAAY,OAFd,oBAMA,cAAC,IAAW0C,MAAZ,CACEF,GAAI1C,WACJ6C,MAAM,wBACNC,UAAU,uDACVC,QAAQ,yCACRC,MAAM,uBACNC,UAAU,yCACVC,QAAQ,uDAPV,SASE,sBAAKhD,UAAU,2JAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,sBAAKA,UAAU,qCAAf,UACE,mBAAGA,UAAU,mCAAb,kBACA,0BACEkD,KAAK,OACLC,KAAK,GACLC,YAAY,mBACZpD,UAAU,kEACVqD,SA1DY,SAACC,GAC7B,IAAMC,EAAcD,EAAME,OAAOC,MAE5BF,GAELpB,EAAQ,2BAAKtB,GAAN,IAAYR,MAAOkD,EAAYG,aAuDxB,mBAAG1D,UAAU,mCAAb,kBACA,qBAAKA,UAAU,gGAAf,SACE,uBACEkD,KAAK,OACLlD,UAAU,aACV2D,IAAK1B,EACL2B,UAtFI,SAACC,GACvB,IAAMC,EAAM7B,EAAS8B,QAAQN,MACf,UAAVI,EAAEG,KAEDF,IAEL3B,EAAQ,2BACHtB,GADE,IAELC,KAAK,GAAD,mBAAMD,EAAKC,MAAX,CAAiB,CAAET,MAAOyD,EAAIJ,OAAQ3C,GAAIkD,KAAKC,YAGrDjC,EAAS8B,QAAQN,MAAQ,SA8EX,qBAAKzD,UAAU,gDAAf,SACGa,EAAKC,KAAKa,KAAI,SAACC,GAAD,OACb,cAACxB,EAAD,CAEEC,MAAOuB,EAAEvB,MACTC,MAAOE,IACPD,SAAU,kBAjFPQ,EAiF6Ba,EAAEb,QAhFtDoB,GAAQ,SAAC/C,GACP,OAAO,2BAAKA,GAAZ,IAAkB0B,KAAM1B,EAAK0B,KAAKqD,QAAO,SAACvC,GAAD,OAAOA,EAAEb,KAAOA,UAFrC,IAACA,IA8EEa,EAAEb,cASjB,sBAAKf,UAAU,2DAAf,UACE,wBACEkD,KAAK,SACLlD,UAAU,mQACVC,QA7EM,WACfY,EAAKR,QACVyB,EAAUjB,GACVmB,GAAS,KAuEG,sBAOA,wBACEkB,KAAK,SACLlD,UAAU,4QACVC,QAAS,kBAAM+B,GAAS,IAH1B,mCAaZoC,SAASC,eAAe,iBCpIb,SAASC,EAAOrF,GAC7B,OACE,qBACEsF,MAAO,CAAEC,OAAQ,KACjBxE,UAAS,sGAFX,SAIE,mBAAGA,UAAU,gBAAb,yBCDS,SAASyE,EAAT,GAOX,IANFC,EAMC,EANDA,MACAC,EAKC,EALDA,OACAtE,EAIC,EAJDA,MACA6C,EAGC,EAHDA,KACA0B,EAEC,EAFDA,OACA9C,EACC,EADDA,UAEA,EAA0Bd,oBAAS,GAAnC,mBAAO6D,EAAP,KAAcC,EAAd,KAgBA,OACE,eAAC,IAAMhF,SAAP,WACG+E,GACC,cAAChD,EAAD,CACEC,UAAW,SAACjB,GAAD,OAAUiB,EAAU,2BAAKjB,GAAN,IAAYqC,KAAMA,MAChDnB,KAAM8C,EACN7C,SApBY,SAACgC,GACnBc,EAASd,MAsBP,sBACEhE,UAAU,6CACV+E,WArBkB,SAAC1D,GACvBA,EAAGK,kBAqBCsD,OAlBa,SAAC3D,GAClBA,EAAGK,iBACH,IAAMX,EAAKM,EAAGC,aAAa2D,QAAQ,MACnCL,EAAO7D,EAAImC,IAYT,UAKE,yBAAQlD,UAAU,OAAlB,UACE,sBAAKA,UAAU,6CAAf,UACE,qBAAKA,UAAU,gBAAf,SAAgCK,IAChC,mBAAGL,UAAU,2DAAb,SACG0E,EAAMC,YAGX,qBACE1E,QAAS,kBAAM6E,GAAS,IACxB9E,UAAU,oFAFZ,kBAOF,gCACG0E,EAAM/C,KAAI,SAACd,GAAD,OACT,cAACD,EAAD,CAAoBC,KAAMA,GAAfA,EAAKE,OAGjB4D,EAAS,GAAK,cAACL,EAAD,aC3DV,SAASY,EAASjG,GAC/B,MAA0B+B,mBAAS,IAAnC,mBAAO0D,EAAP,KAAcS,EAAd,KAEMC,EAAkB,SAACvE,GACvBsE,EAAS,GAAD,mBAAKT,GAAL,aAAC,eAAgB7D,GAAjB,IAAuBE,GAAIkD,KAAKC,YAGpCmB,EAAc,SAACtE,EAAImC,GACvB,IAAMoC,EAAeZ,EAAM/C,KAAI,SAACd,GAK9B,OAJIE,GAAMF,EAAKE,KACbF,EAAKqC,KAAOA,GAGPrC,KAGTsE,EAAS,YAAIG,KAIf,OADA7F,QAAQC,IAAIgF,GAEV,cAAC,IAAM5E,SAAP,UACE,qBAAKE,UAAU,4BAAf,SACE,sBAAKA,UAAU,6EAAf,UACE,oBAAIA,UAAU,oBAAd,kCAEA,sBAAKA,UAAU,+BAAf,UACE,cAACyE,EAAD,CACEpE,MAAM,qBACNqE,MAAOA,EAAMP,QAAO,SAACvC,GAAD,MAAkB,UAAXA,EAAEsB,QAC7BpB,UAAWsD,EACXlC,KAAK,QACL0B,OAAQS,EACRV,OAAQD,EAAMC,SAEhB,cAACF,EAAD,CACEpE,MAAM,6CACNqE,MAAOA,EAAMP,QAAO,SAACvC,GAAD,MAAkB,aAAXA,EAAEsB,QAC7BpB,UAAWsD,EACXlC,KAAK,WACL0B,OAAQS,EACRV,OAAQD,EAAMC,SAEhB,cAACF,EAAD,CACEpE,MAAM,wBACNqE,MAAOA,EAAMP,QAAO,SAACvC,GAAD,MAAkB,aAAXA,EAAEsB,QAC7BpB,UAAWsD,EACXlC,KAAK,WACL0B,OAAQS,EACRV,OAAQD,EAAMC,mB,YClDfY,EAAc,WAEzB,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAASE,KAAT,2BACKC,QADL,IAEEC,MAAOD,WAAeC,MACtBC,OAAQF,WAAeE,UAG3B,OAAOL,G,yBCuFMM,EA5FE,SAAC,GAQX,IAPEC,EAOH,EAPJ1G,MACA2G,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAY7F,KAAK8F,KAAKR,EAAaC,GAGzC,GAAiB,GAAbM,EAAgB,OAAO,KAE3B,IAAME,EAAQC,QAAQ,EAAGH,EAAY,GACrC,OACE,sBAAKtG,UAAU,wFAAf,UACE,sBAAKA,UAAU,wCAAf,UACE,mBACE0G,KAAK,IACL1G,UAAU,4IAFZ,sBAMA,mBACE0G,KAAK,IACL1G,UAAU,iJAFZ,qBAOF,sBAAKA,UAAU,8DAAf,UACE,8BACE,oBAAGA,UAAU,wBAAb,oBACU,IACR,sBAAMA,UAAU,cAAhB,UACIkG,EAAc,GAAKF,EAAW,IAC1B,IAJV,KAKK,IACH,sBAAMhG,UAAU,cAAhB,UACIkG,EAAc,GAAKF,EAAWC,IAC1B,IARV,MASK,sBAAMjG,UAAU,cAAhB,SAA+B+F,IATpC,gBAYF,8BACE,sBACE/F,UAAS,oEACQ,GAAfkG,EAAmB,UAAY,IAEjC,aAAW,aAJb,UAOI,oBACEjG,QAAS,kBAAsB,GAAfiG,EAAmB,KAAOE,KAC1CpG,UAAU,8IAFZ,UAIE,sBAAMA,UAAU,UAAhB,sBACA,cAAC,IAAD,CAAiBA,UAAU,UAAU,cAAY,YAIpDwG,EAAM7E,KAAI,SAACgF,GAAD,OACT,mBAEE3G,UACE2G,GAAKT,EACD,6HACA,iIAENjG,QAAS,kBAAMkG,EAAaQ,IAP9B,SASGA,GARIA,MAYRT,EAAcI,GACb,oBACErG,QAASoG,EACTrG,UAAU,8IAFZ,UAIE,sBAAMA,UAAU,UAAhB,kBACA,cAAC,IAAD,CAAkBA,UAAU,UAAU,cAAY,wB,IC6CnD4G,E,4MA9HbjH,MAAQ,CAAE6F,SAAUD,IAAeW,YAAa,EAAGF,SAAU,G,EAE7Da,iBAAmB,SAACF,GAClB,EAAKxH,SAAL,2BAAmB,EAAKQ,OAAxB,IAA+BuG,YAAaS,M,EAG9CG,qBAAuB,WACrB,EAAK3H,SAAL,2BAAmB,EAAKQ,OAAxB,IAA+BuG,YAAa,EAAKvG,MAAMuG,YAAc,M,EAGvEa,qBAAuB,WACrB,EAAK5H,SAAL,2BAAmB,EAAKQ,OAAxB,IAA+BuG,YAAa,EAAKvG,MAAMuG,YAAc,M,4CAGvE,WACE,MAAyDnG,KAAKJ,MAA5CqH,EAAlB,EAAQxB,SACFyB,ECrBH,SAAkBC,EAAOhB,EAAaF,GAC3C,IAAMmB,GAAcjB,EAAc,GAAKF,EAEvC,OAAOS,IAAES,GAAOE,MAAMD,GAAYE,KAAKrB,GAAUvC,QDkB7B6D,CAASN,EAD3B,EAA+Bd,YAA/B,EAA4CF,UAG5C,OACE,qBAAKhG,UAAU,2BAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,0CAAf,SACE,qBAAKA,UAAU,4DAAf,SACE,sBAAKA,UAAU,gEAAf,UACE,wBAAOA,UAAU,sCAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oBACEuH,MAAM,MACNvH,UAAU,iFAFZ,kBAMA,oBACEuH,MAAM,MACNvH,UAAU,iFAFZ,mBAMA,oBACEuH,MAAM,MACNvH,UAAU,iFAFZ,oBAMA,oBACEuH,MAAM,MACNvH,UAAU,iFAFZ,kBAMA,oBAAIuH,MAAM,MAAMvH,UAAU,qBAA1B,SACE,sBAAMA,UAAU,UAAhB,yBAIN,uBAAOA,UAAU,oCAAjB,SACGiH,EAAUtF,KAAI,SAAC6F,GAAD,OACb,+BACE,oBAAIxH,UAAU,8BAAd,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,qBACEA,UAAU,yBACVyH,IAAKD,EAAO3B,SACZ6B,IAAI,OAGR,sBAAK1H,UAAU,OAAf,UACE,qBAAKA,UAAU,oCAAf,SACGwH,EAAOG,YAAc,IAAMH,EAAOI,aAErC,qBAAK5H,UAAU,wBAAf,SACGwH,EAAO5B,kBAKhB,qBAAI5F,UAAU,8BAAd,UACE,qBAAKA,UAAU,wBAAf,SACGwH,EAAOnH,UAEV,qBAAKL,UAAU,wBAAf,SACGwH,EAAOK,qBAGZ,oBAAI7H,UAAU,8BAAd,SACE,sBAAMA,UAAU,4FAAhB,sBAIF,oBAAIA,UAAU,oDAAd,SACGwH,EAAOM,aAEV,oBAAI9H,UAAU,6DAAd,SACE,mBACE0G,KAAK,IACL1G,UAAU,wCAFZ,sBArCKwH,EAAO5B,iBAgDtB,cAAC,EAAD,CACEvG,MAAO2H,EAAYrC,OACnBqB,SAAUjG,KAAKJ,MAAMqG,SACrBE,YAAanG,KAAKJ,MAAMuG,YACxBD,SAAUgB,EAAUtC,OACpBwB,aAAcpG,KAAK8G,iBACnBT,WAAYrG,KAAK+G,qBACjBT,WAAYtG,KAAKgH,wC,GAnHjB7G,aE8DL6H,MArDf,WACE,MAAgC/G,mBAAS,SAAzC,mBAAOgH,EAAP,KAAiBC,EAAjB,KAeMC,EAAe,SAAC5H,GACpB,MAAM,iCAAN,OAAwCA,EAAxC,SAGF,OACE,eAAC,IAAMR,SAAP,WACE,sBAAKE,UAAU,2CAAf,UACE,mBACEA,UAAWkI,EAAa,OACxBjI,QAAS,WACPgI,EAAY,UAHhB,mBAQA,mBACEjI,UAAWkI,EAAa,QACxBjI,QAAS,WACPgI,EAAY,UAHhB,iCAQA,mBACEjI,UAAWkI,EAAa,SACxBjI,QAAS,WACPgI,EAAY,YAHhB,sBApCoB,WACxB,OAAQD,GACN,IAAK,QACH,OAAO,cAAC9C,EAAD,IACT,IAAK,QACH,OAAO,cAAC,EAAD,IACT,IAAK,UACH,OAAO,cAAC,EAAD,KAsCRiD,OCnDQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdjG,IAASyG,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1E,SAASC,eAAe,SAM1B+D,K","file":"static/js/main.5f2bce5e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  /**\r\n   * *Mounting lifecycle methods\r\n   * constructor()\r\n   * static getDerivedStateFromProps()\r\n   * render()\r\n   * componentDidMount()\r\n   */\r\n\r\n  /**\r\n   * *Updating lifecycle methods\r\n   * static getDerivedStateFromProps()\r\n   * shouldComponentUpdate()\r\n   * render()\r\n   * getSnapshotBeforeUpdate()\r\n   * componentDidUpdate()\r\n   */\r\n\r\n  /**\r\n   * *Unmounting lifecycle method\r\n   * componentWillUnmount()\r\n   */\r\n\r\n  /**\r\n   * *Error handling lifecycle methods\r\n   * static getDerivedStateFromError()\r\n   * componentDidCatch()\r\n   */\r\n\r\n  // Reference: https://blog.logrocket.com/react-lifecycle-methods-tutorial-examples/#shouldcomponentupdate\r\n\r\n  /**\r\n   * * Mounting\r\n   * constructor() - 1\r\n   * static getDerivedStateFromProps() - 2\r\n   * render() - 3\r\n   * componentDidMount() - 4\r\n   */\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { count: 0 };\r\n\r\n    console.log(\"contructor: \", this.state.count);\r\n  }\r\n\r\n  /**\r\n   * * First function after constructor\r\n   * If you want to map props to state\r\n   * You may return null for not updating the state\r\n   * ! On Update phase, this will remape from props to state\r\n   * * Update Phase: - 1\r\n   */\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"getDrivedStateFromProps: Updating state\");\r\n    return null;\r\n  }\r\n\r\n  increase = () => {\r\n    this.setState((prev) => ({\r\n      count: prev.count + 1,\r\n    }));\r\n  };\r\n\r\n  /**\r\n   * * Update Phase - 2\r\n   * Mostly used for optimization to prevent unnecssary renders\r\n   * compare current state/props with new one. If require update then return true.\r\n   * Otherwise rereturn false\r\n   */\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log(\"shouldComponentUpdate\");\r\n    // return this.state.count % 2 === 0;\r\n\r\n    return true;\r\n  }\r\n\r\n  // Prepare your DOM and set here for render\r\n  render() {\r\n    console.log(\"Rendering: Component is mounting to DOM\");\r\n    return (\r\n      <React.Fragment>\r\n        <p>Use console to see the messages. </p>\r\n        <div>{this.state.count}</div>\r\n        <button className=\"border-2\" onClick={this.increase}>\r\n          Increase\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getSnapshotBeforeUpdate = (prevProps, prevState) => {\r\n    console.log(\"getSnapshotBeforeUpdate\");\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Executes after component is rendered to DOM.\r\n   * Call APIs, set timers etc\r\n   * Subscriptions\r\n   * Only called in mounting phase\r\n   */\r\n  componentDidMount() {\r\n    console.log(\"Component did mount: \", this.state.count);\r\n  }\r\n\r\n  // Executes each time after rendering to DOM.\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"componentDidUpdate\");\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","function DatePractise() {\r\n  // Right now.\r\n  console.log(Date.now());\r\n  const date = new Date();\r\n\r\n  console.log(date.getDay());\r\n  console.log(date.getUTCMinutes());\r\n}\r\n\r\nexport default DatePractise;\r\n","import React from \"react\";\r\nimport { XIcon } from \"@heroicons/react/outline\";\r\n\r\nexport default function Tag({ title, color, onDelete }) {\r\n  return (\r\n    <div\r\n      className={`mr-2 bg-${color}-300 rounded-md inline-block px-2 py-1/2 `}\r\n    >\r\n      <p className=\"text-sm inline\">{title}</p>\r\n      {typeof onDelete == \"function\" && (\r\n        <XIcon className=\"h-3 w-3 inline\" onClick={onDelete} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","const randomColor = () => {\r\n  const colors = [\r\n    \"grey\",\r\n    \"red\",\r\n    \"yellow\",\r\n    \"green\",\r\n    \"blue\",\r\n    \"indigo\",\r\n    \"purple\",\r\n    \"pink\",\r\n  ];\r\n\r\n  let rand = (Math.random() * (7 - 0) + 0).toFixed(0);\r\n  return colors[rand];\r\n};\r\n\r\nexport default randomColor;\r\n","import React, { useState } from \"react\";\r\nimport Tag from \"./tag\";\r\n\r\nimport randomColor from \"../shared\";\r\n\r\nexport function Todo({ todo: { title, tags, id } }) {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const dragStart = (ev) => {\r\n    ev.dataTransfer.setData(\"id\", id.toString());\r\n\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const dragEnd = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    setIsDragging(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      draggable\r\n      onDragStart={dragStart}\r\n      onDragEnd={dragEnd}\r\n      className={`todo mb-3 rounded-md shadow-sm hover:shadow-md bg-white p-3 cursor-move border-t-2 ${\r\n        isDragging && \"opacity-30\"\r\n      }`}\r\n    >\r\n      <p className=\"text-md\">{title}</p>\r\n\r\n      <div className=\"flex-1 mt-3 space-y-1\">\r\n        {tags.map((t) => (\r\n          <Tag color={randomColor()} title={t.title} key={t.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Tag from \"../components/tag\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport randomColor from \"../shared\";\r\n\r\nexport default function Modal({ onAddTodo, open, onToggle }) {\r\n  const tagInput = useRef(null);\r\n  const [todo, setTodo] = useState({ title: \"\", tags: [] });\r\n\r\n  const handleTagsEnter = (e) => {\r\n    const tag = tagInput.current.value;\r\n    if (e.key !== \"Enter\") return;\r\n\r\n    if (!tag) return;\r\n\r\n    setTodo({\r\n      ...todo,\r\n      tags: [...todo.tags, { title: tag.trim(), id: Date.now() }],\r\n    });\r\n\r\n    tagInput.current.value = \"\";\r\n  };\r\n\r\n  const handleDeleteTag = (id) => {\r\n    setTodo((prev) => {\r\n      return { ...prev, tags: prev.tags.filter((t) => t.id !== id) };\r\n    });\r\n  };\r\n\r\n  const handleTodoDescription = (event) => {\r\n    const description = event.target.value;\r\n\r\n    if (!description) return;\r\n\r\n    setTodo({ ...todo, title: description.trim() });\r\n  };\r\n\r\n  const handleAddTodo = () => {\r\n    if (!todo.title) return;\r\n    onAddTodo(todo);\r\n    onToggle(false);\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n        onClose={onToggle}\r\n      >\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"flex flex-col px-6 py-5 bg-gray-50\">\r\n                  <p className=\"mb-2 font-semibold text-gray-700\">Todo</p>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    name=\"\"\r\n                    placeholder=\"Type description\"\r\n                    className=\"p-2 mb-5 bg-white border border-gray-200 rounded shadow-sm h-36\"\r\n                    onChange={handleTodoDescription}\r\n                  />\r\n                  <p className=\"mb-2 font-semibold text-gray-700\">Tags</p>\r\n                  <div className=\"flex flex-row items-center justify-between  bg-white border border-gray-200 rounded shadow-sm\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"w-full p-2\"\r\n                      ref={tagInput}\r\n                      onKeyDown={handleTagsEnter}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-row items-center justify-start mt-3\">\r\n                    {todo.tags.map((t) => (\r\n                      <Tag\r\n                        key={t.id}\r\n                        title={t.title}\r\n                        color={randomColor()}\r\n                        onDelete={() => handleDeleteTag(t.id)}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-green-500 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gree-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={handleAddTodo}\r\n                >\r\n                  Add Todo\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={() => onToggle(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>,\r\n    document.getElementById(\"modal-portal\")\r\n  );\r\n}\r\n","export default function Mocker(props) {\r\n  return (\r\n    <div\r\n      style={{ height: 120 }}\r\n      className={`mb-3 rounded-md border-dashed border flex justify-center items-center p-3 border-8 block min-w-full`}\r\n    >\r\n      <p className=\"text-gray-300\">Drop Here</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Todo } from \"./todo\";\r\nimport Modal from \"../modal\";\r\nimport Mocker from \"./mocker\";\r\n\r\nexport default function Column({\r\n  todos,\r\n  length,\r\n  title,\r\n  type,\r\n  onMove,\r\n  onAddTodo,\r\n}) {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggleModal = (key) => {\r\n    setModal(key);\r\n  };\r\n\r\n  const captureDragOver = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (ev) => {\r\n    ev.preventDefault();\r\n    const id = ev.dataTransfer.getData(\"id\");\r\n    onMove(id, type);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {modal && (\r\n        <Modal\r\n          onAddTodo={(todo) => onAddTodo({ ...todo, type: type })}\r\n          open={modal}\r\n          onToggle={toggleModal}\r\n        />\r\n      )}\r\n      <div\r\n        className=\"flex-1 bg-gray-100 rounded-sm p-2 dragover\"\r\n        onDragOver={captureDragOver}\r\n        onDrop={handleDrop}\r\n      >\r\n        <header className=\"mb-2\">\r\n          <div className=\"flex flex-row justify-between items-center\">\r\n            <div className=\"font-semibold\">{title}</div>\r\n            <p className=\"bg-gray-300 text-gray-500 text-sm rounded-lg px-2 py-1/2\">\r\n              {todos.length}\r\n            </p>\r\n          </div>\r\n          <div\r\n            onClick={() => setModal(true)}\r\n            className=\"bg-gray-300 text-gray-500 rounded-lg px-2 text-center tex-lg my-2 hover:shadow-sm\"\r\n          >\r\n            +\r\n          </div>\r\n        </header>\r\n        <div>\r\n          {todos.map((todo) => (\r\n            <Todo key={todo.id} todo={todo} />\r\n          ))}\r\n\r\n          {length > 0 && <Mocker />}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Column from \"./components/column\";\r\n\r\nexport default function SPLTodos(props) {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const handleOnAddTodo = (todo) => {\r\n    setTodos([...todos, { ...todo, id: Date.now() }]);\r\n  };\r\n\r\n  const moveElement = (id, type) => {\r\n    const updatedTodos = todos.map((todo) => {\r\n      if (id == todo.id) {\r\n        todo.type = type;\r\n      }\r\n\r\n      return todo;\r\n    });\r\n\r\n    setTodos([...updatedTodos]);\r\n  };\r\n\r\n  console.log(todos);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"bg-gray-200 min-h-screen \">\r\n        <div className=\"container shadow-md relative top-9 rounded-md p-4 bg-gray-50 w-2/3 mx-auto\">\r\n          <h1 className=\"text-xl font-bold\">System Plus Todo App</h1>\r\n\r\n          <div className=\"flex flex-row space-x-2 mt-5\">\r\n            <Column\r\n              title=\"💡 Ideas\"\r\n              todos={todos.filter((t) => t.type === \"ideas\")}\r\n              onAddTodo={handleOnAddTodo}\r\n              type=\"ideas\"\r\n              onMove={moveElement}\r\n              length={todos.length}\r\n            />\r\n            <Column\r\n              title=\"👨‍💻 In Progress\"\r\n              todos={todos.filter((t) => t.type === \"progress\")}\r\n              onAddTodo={handleOnAddTodo}\r\n              type=\"progress\"\r\n              onMove={moveElement}\r\n              length={todos.length}\r\n            />\r\n            <Column\r\n              title=\"🏁 Finished\"\r\n              todos={todos.filter((t) => t.type === \"finished\")}\r\n              onAddTodo={handleOnAddTodo}\r\n              type=\"finished\"\r\n              onMove={moveElement}\r\n              length={todos.length}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as faker from \"faker\";\r\n\r\nexport const getContacts = () => {\r\n  let contacts = [];\r\n  for (let i = 0; i < 37; i++) {\r\n    contacts.push({\r\n      ...faker.name,\r\n      email: faker.internet.email,\r\n      avatar: faker.internet.avatar,\r\n    });\r\n  }\r\n  return contacts;\r\n};\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable eqeqeq */\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/solid\";\r\n\r\nimport * as _ from \"lodash\";\r\n\r\nconst Paginate = ({\r\n  count: itemsCount,\r\n  pageSize,\r\n  selected,\r\n  currentPage,\r\n  onPageChange,\r\n  onPrevPage,\r\n  onNextPage,\r\n}) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  //return if we have only one page. No pagination for single page.\r\n  if (pageCount == 1) return null;\r\n\r\n  const pages = _.range(1, pageCount + 1);\r\n  return (\r\n    <div className=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\r\n      <div className=\"flex-1 flex justify-between sm:hidden\">\r\n        <a\r\n          href=\"#\"\r\n          className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n        >\r\n          Previous\r\n        </a>\r\n        <a\r\n          href=\"#\"\r\n          className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n        >\r\n          Next\r\n        </a>\r\n      </div>\r\n      <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n        <div>\r\n          <p className=\"text-sm text-gray-700\">\r\n            Showing{\" \"}\r\n            <span className=\"font-medium\">\r\n              {(currentPage - 1) * pageSize + 1}\r\n            </span>{\" \"}\r\n            to{\" \"}\r\n            <span className=\"font-medium\">\r\n              {(currentPage - 1) * pageSize + selected}\r\n            </span>{\" \"}\r\n            of <span className=\"font-medium\">{itemsCount}</span> results\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <nav\r\n            className={`relative z-0 inline-flex rounded-md shadow-sm -space-x-px ${\r\n              currentPage == 1 ? \"bg-grey\" : \"\"\r\n            }`}\r\n            aria-label=\"Pagination\"\r\n          >\r\n            {\r\n              <a\r\n                onClick={() => (currentPage == 1 ? null : onPrevPage())}\r\n                className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n              >\r\n                <span className=\"sr-only\">Previous</span>\r\n                <ChevronLeftIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n              </a>\r\n            }\r\n\r\n            {pages.map((p) => (\r\n              <a\r\n                key={p}\r\n                className={\r\n                  p == currentPage\r\n                    ? \"z-10 bg-indigo-50 border-indigo-500 text-indigo-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium\"\r\n                    : \"bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium\"\r\n                }\r\n                onClick={() => onPageChange(p)}\r\n              >\r\n                {p}\r\n              </a>\r\n            ))}\r\n\r\n            {currentPage < pageCount && (\r\n              <a\r\n                onClick={onNextPage}\r\n                className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n              >\r\n                <span className=\"sr-only\">Next</span>\r\n                <ChevronRightIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n              </a>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { getContacts } from \"../services/contact\";\r\nimport Paginate from \"./pagination\";\r\nimport { paginate } from \"./paginate\";\r\n\r\nclass Table extends Component {\r\n  state = { contacts: getContacts(), currentPage: 1, pageSize: 8 };\r\n\r\n  handlePageChange = (p) => {\r\n    this.setState({ ...this.state, currentPage: p });\r\n  };\r\n\r\n  handlePrevPageChange = () => {\r\n    this.setState({ ...this.state, currentPage: this.state.currentPage - 1 });\r\n  };\r\n\r\n  handleNextPageChange = () => {\r\n    this.setState({ ...this.state, currentPage: this.state.currentPage + 1 });\r\n  };\r\n\r\n  render() {\r\n    const { contacts: allContacts, currentPage, pageSize } = this.state;\r\n    const paginated = paginate(allContacts, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"bg-gray-100 py-6 flex-1 \">\r\n        <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\r\n          <div className=\"flex flex-col\">\r\n            <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n              <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n                <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n                  <table className=\"min-w-full divide-y divide-gray-200\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                        >\r\n                          Name\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                        >\r\n                          Title\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                        >\r\n                          Status\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                        >\r\n                          Role\r\n                        </th>\r\n                        <th scope=\"col\" className=\"relative px-6 py-3\">\r\n                          <span className=\"sr-only\">Edit</span>\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                      {paginated.map((person) => (\r\n                        <tr key={person.email()}>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"flex items-center\">\r\n                              <div className=\"flex-shrink-0 h-10 w-10\">\r\n                                <img\r\n                                  className=\"h-10 w-10 rounded-full\"\r\n                                  src={person.avatar()}\r\n                                  alt=\"\"\r\n                                />\r\n                              </div>\r\n                              <div className=\"ml-4\">\r\n                                <div className=\"text-sm font-medium text-gray-900\">\r\n                                  {person.firstName() + \" \" + person.lastName()}\r\n                                </div>\r\n                                <div className=\"text-sm text-gray-500\">\r\n                                  {person.email()}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"text-sm text-gray-900\">\r\n                              {person.title()}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-500\">\r\n                              {person.jobDescriptor()}\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\r\n                              Active\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {person.jobTitle()}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                            <a\r\n                              href=\"#\"\r\n                              className=\"text-indigo-600 hover:text-indigo-900\"\r\n                            >\r\n                              Edit\r\n                            </a>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                  <Paginate\r\n                    count={allContacts.length}\r\n                    pageSize={this.state.pageSize}\r\n                    currentPage={this.state.currentPage}\r\n                    selected={paginated.length}\r\n                    onPageChange={this.handlePageChange}\r\n                    onPrevPage={this.handlePrevPageChange}\r\n                    onNextPage={this.handleNextPageChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, currentPage, pageSize) {\r\n  const startIndex = (currentPage - 1) * pageSize;\r\n\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport Counter from \"./counter/counter\";\nimport DatePractise from \"./date\";\nimport Set from \"./sets/Set\";\nimport SPLTodos from \"./todo-app/SPLTodos\";\nimport Table from \"./pagination/table\";\nimport React, { useState } from \"react\";\n\n/**\n ** App js is used to configure different projects.\n * TODO: Todos project\n * TODO: Counter project(Life Cycle Hooks)\n * TODO: Working on Data (Pagination, sorting, filtering)\n */\n\nfunction App() {\n  const [selector, setSelector] = useState(\"todos\");\n\n  const selectedComponent = () => {\n    switch (selector) {\n      case \"todos\":\n        return <SPLTodos />;\n      case \"table\":\n        return <Table />;\n      case \"counter\":\n        return <Counter />;\n      default:\n        break;\n    }\n  };\n\n  const buttonStyles = (color) => {\n    return `px-5 text-white rounded-sm bg-${color}-400`;\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"flex flex-row justify-center space-x-10 \">\n        <a\n          className={buttonStyles(\"red\")}\n          onClick={() => {\n            setSelector(\"todos\");\n          }}\n        >\n          Todos\n        </a>\n        <a\n          className={buttonStyles(\"blue\")}\n          onClick={() => {\n            setSelector(\"table\");\n          }}\n        >\n          Operations on Table\n        </a>\n        <a\n          className={buttonStyles(\"green\")}\n          onClick={() => {\n            setSelector(\"counter\");\n          }}\n        >\n          Hooks\n        </a>\n      </div>\n      {selectedComponent()}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}